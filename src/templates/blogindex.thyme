<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
            th:with="curPageNum=(${currentPageNumber != null} ? ${currentPageNumber} : 1),
                    title=null,
                    pubContent=(${#lists.toList({})})">
<head th:replace="~{htmlhead.thyme::head (title=${title})}"></head>
<!--/* Build array of content for display */-->
<th:block th:each="c : ${all_content}" >
    <th:block th:if="${c != null
                     && #strings.equals(c.status, 'published')
                     && #strings.equals(c.type, 'post')}"
                th:utext="${pubContent.add(c)}"></th:block>
    </th:block>
</th:block>
<body onload="prettyPrint()"
            th:with="rootpath=(${content.rootpath != null} ? ${content.rootpath} : ''),
                    current_uri=(|${rootpath}index.html|),
                            numPerPage=(${config.index_posts_per_page}),
                            numItems=(${#lists.size(pubContent)}),
                            rawNumPages=(${numItems / numPerPage}),
                            numPages=(${numItems % numPerPage} == 0
                                    ? ${#numbers.formatDecimal(rawNumPages, 0, 0)}
                                    : ${#numbers.formatDecimal(rawNumPages + 1, 0, 0)}),
                            high=(${#numbers.formatInteger(curPageNum * numPerPage, 0)}),
                            low=(${#numbers.formatInteger(high - numPerPage + 1, 0)})">
    <header th:replace="~{header.thyme::header (title=${title})}"
            th:with=""></header>

    <div th:unless="${config.site_menu == 'false'}">
        <nav th:replace="~{menu.thyme::menu (${current_uri})}"></nav>
    </div>

    <main th:with="trunc_indicator=(${config.index_truncation_indicator != null}
                ? ${config.index_truncation_indicator}
                : '...')">
        <section id="entries"
                    th:with="max_length=(${config.index_snippet_length != null}
                                    ? ${config.index_snippet_length}
                                    : 256)">

            <!--/*
            <article>
                <p>
                    max_length: '[[${max_length}]]'<br/>
                    numPerPage: '[[${numPerPage}]]'<br/>
                    numItems: '[[${numItems}]]'<br/>
                    numPages: '[[${numPages}]]'<br/>
                    high: '[[${high}]]'<br/>
                    low: '[[${low}]]'<br/>
                </p>
            </article>
            <article><header><h1>pubContent</h1></header>
                <section class="text"><ol><li th:each="p : ${pubContent}"
                         th:if="${p != null && p.type != null}">
                     [[${p.title}]] ([[${#dates.format(p.date, 'yyyy-MM-dd')}]])</li></ol></section></article>
            */-->

            <article th:each="p : ${pubContent}"
                th:with="tagslist=(${#sets.toSet({})})"
                th:if="${p != null
                       && pStat.count >= low && pStat.count <= high}">

                <th:block th:if="${p.tags != null && ! #lists.isEmpty(#lists.toList(p.tags))}">
                    <th:block th:each="t : ${#lists.sort(#lists.toList(p.tags))}"
                                 th:if="${t != null && ! #strings.isEmpty(t)}"
                                 th:with="entry=(${#lists.toList({})})">

                        <th:block th:if="${#strings.startsWith(t, '#')}"
                                    th:utext="${entry.add(t)}"
                                    th:remove="all"></th:block>
                        <th:block th:if="${! #strings.startsWith(t, '#')}"
                                    th:text="${entry.add('#' + t)}"
                                    th:remove="all"></th:block>

                        <th:block th:text="${entry.add('tags/' + #uris.escapePathSegment(t) + '.html')}"
                                    th:remove="all"></th:block>

                        <th:block th:text="${tagslist.add(entry)}"
                                    th:remove="all"></th:block>
                    </th:block>
                </th:block>
                <header>
                    <h1><a th:href="|${rootpath}${p.uri}|" href="href">[[${p.title}]]</a></h1>
                    <div class="category" th:if="${p.cat != null
                                && ! #strings.isEmpty(p.cat)}">Category: [[${#strings.capitalizeWords(p.cat)}]]</div>
                    <div class="tags" th:unless="${tagslist == null || #sets.isEmpty(tagslist)}">Tags:
                        <th:block th:each="t,i : ${tagslist}"><a
                                    th:href="|${rootpath}${t[1]}|" href="#">[[${t[0]}]]</a><th:block
                                            th:unless="${i.last}">, </th:block></th:block>
                    </div>
                    <div class="author" th:if="${config.site_author_index_shown}"
                                th:with="p_author=(${p.author != null}
                                        ? ${p.author}
                                        : (${config.site_owner_shown && config.site_owner != null}
                                                ? ${config.site_owner}
                                                : ''))">[[${p_author}]]</div>
                    <div class="timestamp"><time
                                th:datetime="${#dates.format(p.date, 'yyyy-MM-dd')}">[[${#dates.format(p.date,
                                        'dd MMMM yyyy')}]]</time></div>
                </header>
                <section class="text" th:if="${#strings.length(p.body) < max_length}"
                            th:utext="${p.body}"></section>
                <section class="text" th:unless="${#strings.length(p.body) < max_length}"
                            th:utext="${#strings.trim(#strings.substring(p.body, 0, max_length))} + ${trunc_indicator}"/>
            </article>
        </section>
        <nav th:replace="~{pagination.thyme::pagination (${numPages}, ${curPageNum})}"></nav>
    </main>

    <aside th:replace="~{sidebar.thyme::sidebar (${current_uri})}"></aside>

    <footer th:replace="~{footer.thyme::footer}"></footer>
</body>
</html>
